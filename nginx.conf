server {
    listen 80 default_server;
    listen [::]:80 default_server;
    root /var/www/html;
    server_name _;

    location /api {
        proxy_pass 'http://127.0.0.1:8080';
    }

    location /data {
        alias /data;
    }

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying homepage.
        try_files $uri /index.html;
    }
}

# server {
#   listen 443 ssl;
#   server_name default_server;
#   keepalive_timeout   70;

#   location / {
#     proxy_set_header        X-Real-IP $remote_addr;
#     proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

      # Docker container started with `--name ave-ssl -p 8443:80 ...`
#     proxy_pass 'http://127.0.0.1:8443';

#     client_max_body_size    1000m;
#     client_body_buffer_size 128k;
#     proxy_connect_timeout   60s;
#     proxy_send_timeout      90s;
#     proxy_read_timeout      90s;
#     proxy_buffering         off;
#     proxy_temp_file_write_size 64k;
#   }

#   ssl_certificate /etc/letsencrypt/live/default_server/fullchain.pem; # managed by Certbot
#   ssl_certificate_key /etc/letsencrypt/live/default_server/privkey.pem; # managed by Certbot

#   # Taken from https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=nginx-1.10.3&openssl=1.0.2g&hsts=yes&profile=modern
#   ssl_session_timeout 1d;
#   ssl_session_cache shared:SSL:50m;
#   ssl_session_tickets off;
  
#   # modern configuration. tweak to your needs.
#   ssl_protocols TLSv1.2;
#   ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
#   ssl_prefer_server_ciphers on;

#   # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
#   add_header Strict-Transport-Security max-age=15768000;

#   # OCSP Stapling ---
#   # fetch OCSP records from URL in ssl_certificate and cache them
#   ssl_stapling on;
#   ssl_stapling_verify on;
# }
